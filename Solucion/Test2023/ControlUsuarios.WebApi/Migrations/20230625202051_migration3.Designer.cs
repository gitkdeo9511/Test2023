// <auto-generated />
using System;
using ControlUsuarios.WebApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ControlUsuarios.WebApi.Migrations
{
    [DbContext(typeof(TestSistemaDbContext))]
    [Migration("20230625202051_migration3")]
    partial class migration3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ControlUsuarios.WebApi.Models.Permiso", b =>
                {
                    b.Property<Guid>("IdPermiso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPermiso");

                    b.ToTable("Permiso");

                    b.HasData(
                        new
                        {
                            IdPermiso = new Guid("b4924c0a-609a-4baa-bc84-c2fe241863bf"),
                            Descripcion = "Permisos de Administrador",
                            Name = "Full"
                        },
                        new
                        {
                            IdPermiso = new Guid("cd864bff-fdd8-4b65-a222-1dec52804be1"),
                            Descripcion = "Permisos de Cliente",
                            Name = "Cliente"
                        });
                });

            modelBuilder.Entity("ControlUsuarios.WebApi.Models.Rol", b =>
                {
                    b.Property<Guid>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            IdRol = new Guid("23ecb38c-2b79-4ea7-b818-4d0eac0f1b76"),
                            Name = "Administrador"
                        },
                        new
                        {
                            IdRol = new Guid("bb388e14-1d76-4ca8-b849-69c39dd947be"),
                            Name = "Cliente"
                        });
                });

            modelBuilder.Entity("ControlUsuarios.WebApi.Models.RolPermiso", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PermisoRefId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolRefId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PermisoRefId");

                    b.HasIndex("RolRefId");

                    b.ToTable("RolPermiso");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ebe22f3a-bf65-4938-8757-4acc2d5952fb"),
                            PermisoRefId = new Guid("b4924c0a-609a-4baa-bc84-c2fe241863bf"),
                            RolRefId = new Guid("23ecb38c-2b79-4ea7-b818-4d0eac0f1b76")
                        },
                        new
                        {
                            Id = new Guid("30243cfb-fc14-4957-8009-6e0152933548"),
                            PermisoRefId = new Guid("cd864bff-fdd8-4b65-a222-1dec52804be1"),
                            RolRefId = new Guid("bb388e14-1d76-4ca8-b849-69c39dd947be")
                        });
                });

            modelBuilder.Entity("ControlUsuarios.WebApi.Models.Session", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("JWT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("ControlUsuarios.WebApi.Models.Usuario", b =>
                {
                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Enabled")
                        .HasColumnType("bit");

                    b.Property<Guid>("RolRefId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserName");

                    b.HasIndex("RolRefId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UserName = "Admin",
                            Clave = "B/SKTsuv5ygdQ+6eT9uhKg47jjn0DKEiuO6cnpGt74Y=",
                            EmailAddress = "admin@intermail.com",
                            Enabled = true,
                            RolRefId = new Guid("23ecb38c-2b79-4ea7-b818-4d0eac0f1b76")
                        });
                });

            modelBuilder.Entity("ControlUsuarios.WebApi.Models.RolPermiso", b =>
                {
                    b.HasOne("ControlUsuarios.WebApi.Models.Permiso", "Permiso")
                        .WithMany()
                        .HasForeignKey("PermisoRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlUsuarios.WebApi.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permiso");

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("ControlUsuarios.WebApi.Models.Usuario", b =>
                {
                    b.HasOne("ControlUsuarios.WebApi.Models.Rol", "Rol")
                        .WithMany()
                        .HasForeignKey("RolRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });
#pragma warning restore 612, 618
        }
    }
}
